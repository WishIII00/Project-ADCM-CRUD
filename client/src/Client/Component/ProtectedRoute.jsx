import { Navigate, Outlet, useLocation } from "react-router-dom";

const ProtectedRoute = ({ roleRequired }) => {
  const token = sessionStorage.getItem("token");
  const role = sessionStorage.getItem("role");
  const location = useLocation();

  console.log("üîí ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ProtectedRoute:", { token, role, roleRequired });

  // üîí ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‚Üí ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
  if (!token) {
    console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ token - Redirect ‡πÑ‡∏õ /loginPage");
    return <Navigate to="/loginPage" replace />;
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤ role ‡∏Ñ‡∏∑‡∏≠ "user" ‚Üí ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á /home
  if (role === "user" && location.pathname !== "/home") {
    console.warn("‚ùå ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ - Redirect ‡πÑ‡∏õ /home");
    return <Navigate to="/home" replace />;
  }

  // üö´ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ roleRequired ‡πÅ‡∏ï‡πà role ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‚Üí ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
  if (roleRequired && role !== roleRequired) {
    console.warn(`‚ùå role ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á: ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${roleRequired} ‡πÅ‡∏ï‡πà‡πÑ‡∏î‡πâ ${role} - Redirect ‡πÑ‡∏õ /`);
    return <Navigate to="/" replace />;
  }

  console.log("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ");
  return <Outlet />; // ‚úÖ Render Route ‡∏¢‡πà‡∏≠‡∏¢
};

export default ProtectedRoute;
