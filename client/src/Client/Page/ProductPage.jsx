// ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Dependencies ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ProductPage

import { useEffect, useState } from "react"; // ‡πÉ‡∏ä‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ State ‡πÅ‡∏•‡∏∞ Lifecycle
import { useParams, useNavigate } from "react-router-dom"; // ‡∏î‡∏∂‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å URL ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ navigate
import axios from "axios"; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
import { ChevronLeft, ChevronRight, FileText, Repeat, Share } from "lucide-react"; // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UI
import Lightbox from "yet-another-react-lightbox"; // ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
import "yet-another-react-lightbox/styles.css"; // ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á Lightbox
import Thumbnails from "yet-another-react-lightbox/plugins/thumbnails"; // ‡∏õ‡∏•‡∏±‡πä‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏¢‡πà‡∏≠
import "yet-another-react-lightbox/plugins/thumbnails.css"; // ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏¢‡πà‡∏≠
import ChatButton from "../Component/ChatButton";

// ‚úÖ URL ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á API
const BASE_URL = import.meta.env.VITE_API_URL || "http://localhost:3000";

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á cscode ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
const getFullCategoryName = (cscode) => {
  const categoryMap = {
    AORR: "NOTEBOOK PERSONAL COMPUTER (AORR)",
    NW01: "NETWORK SWITCH (NW01)",
    IOT02: "SMART SENSOR DEVICE (IOT02)",
    SC05: "SOLAR PANEL (SC05)",
  };
  return categoryMap[cscode] || cscode || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ cscode ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô Map
};

const ProductPage = () => {
  const { id } = useParams(); // ‚úÖ ‡∏î‡∏∂‡∏á id ‡∏à‡∏≤‡∏Å URL
  const navigate = useNavigate(); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
  const [product, setProduct] = useState(null); // ‚úÖ State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  const [loading, setLoading] = useState(true); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏´‡∏•‡∏î
  const [currentIndex, setCurrentIndex] = useState(0); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ index ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const [isLightboxOpen, setIsLightboxOpen] = useState(false); // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Lightbox
  const token = sessionStorage.getItem("token"); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å API
  const fetchProduct = async () => {
    try {
      const response = await axios.get(`${BASE_URL}/api/newProducts/${id}`);
      setProduct(response.data); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      setCurrentIndex(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï index ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    } catch (error) {
      console.error(
        "üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:",
        error.response?.data || error.message
      );
    } finally {
      setLoading(false); // ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏•‡∏î
    }
  };

  useEffect(() => {
    if (id) fetchProduct(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ id ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  }, [id]);

  // ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÇ‡∏´‡∏•‡∏î
  if (loading) {
    return (
      <div className="text-center py-10 text-lg font-medium">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
    );
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  if (!product) {
    return (
      <div className="text-center py-10 text-lg font-medium text-red-500">
        ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      </div>
    );
  }

  const handleCompareClick = (e) => {
    e.stopPropagation(); // Prevent triggering the card click event
    let selectedProducts = JSON.parse(
      sessionStorage.getItem("selectedProducts") || "[]"
    );
    if (!selectedProducts.find((p) => p._id === product._id)) {
      selectedProducts.push(product);
      sessionStorage.setItem(
        "selectedProducts",
        JSON.stringify(selectedProducts)
      );
    }
    navigate("/compare");
  };

  // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á array ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const images =
    product.images?.map((img) => ({
      src: `${BASE_URL}/uploads/products/${img.fileName}`,
      alt: product.itemDescription,
    })) || [];

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏π‡∏õ
  const handlePrev = () =>
    setCurrentIndex((prev) => (prev === 0 ? images.length - 1 : prev - 1));
  const handleNext = () =>
    setCurrentIndex((prev) => (prev === images.length - 1 ? 0 : prev + 1));

  const fullCategoryName = getFullCategoryName(product.cscode); // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á cscode
  return (
    <div className="min-h-screen bg-gray-100">
      {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û + ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
      <div className="w-full max-w-auto mx-auto p-4 sm:p-6 md:p-8 lg:p-14 bg-white">
        {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û + ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div className="grid grid-cols-1 xl:grid-cols-2 gap-12 items-start pb-8 border-b border-gray-300 relative">
          {/* ‚úÖ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div className="relative flex flex-col items-center w-full space-y-6">
            <div className="relative w-full">
              {images.length > 1 && (
                <button
                  className="absolute left-2 top-1/2 transform -translate-y-1/2 bg-white border rounded-full p-2 shadow hover:bg-gray-200 transition z-10"
                  onClick={handlePrev}
                >
                  <ChevronLeft size={18} />
                </button>
              )}

              <div className="relative w-full h-[460px] bg-gray-100 rounded-2xl flex justify-center items-center overflow-hidden shadow-md">
                {images.length > 0 ? (
                  <img
                    src={images[currentIndex].src}
                    alt={images[currentIndex].alt}
                    className="w-full h-full object-contain cursor-pointer rounded-lg"
                    onClick={() => setIsLightboxOpen(true)}
                  />
                ) : (
                  <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p>
                )}
              </div>

              {images.length > 1 && (
                <button
                  className="absolute right-2 top-1/2 transform -translate-y-1/2 bg-white border rounded-full p-2 shadow hover:bg-gray-200 transition z-10"
                  onClick={handleNext}
                >
                  <ChevronRight size={18} />
                </button>
              )}
            </div>

            {/* ‚úÖ ‡πÅ‡∏ñ‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏¢‡πà‡∏≠ */}
            {images.length > 1 && (
              <div className="flex gap-3 justify-center w-full overflow-x-auto p-3 rounded-lg bg-gray-50">
                {images.map((img, index) => (
                  <img
                    key={index}
                    src={img.src}
                    alt={`‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà ${index + 1}`}
                    className={`w-20 h-20 rounded-lg object-cover cursor-pointer border-2 transition-transform duration-150 hover:scale-110 ${
                      currentIndex === index
                        ? "border-green-500"
                        : "border-transparent"
                    }`}
                    onClick={() => setCurrentIndex(index)}
                  />
                ))}
              </div>
            )}
          </div>

          {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div className="space-y-6 w-full text-left">
            <h1 className="text-3xl font-bold text-gray-800 leading-tight">
              {product.itemDescription}
            </h1>

            <ul className="list-disc pl-16 space-y-5 text-gray-800 text-lg">
              <li>
                <span className="font-semibold">‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠:</span>{" "}
                {product.brand || "N/A"}
              </li>
              <li>
                <span className="font-semibold">‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</span>{" "}
                {product.itemNumber || "N/A"}
              </li>
              <li>
                <span className="font-semibold">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</span>{" "}
                {product.category || "N/A"}
              </li>
              <li>
                <span className="font-semibold">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</span>{" "}
                {fullCategoryName || "N/A"}
              </li>
              <li>
                <span className="font-semibold">‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ICT:</span>{" "}
                <span
                  className={`text-gray-700 ${
                    product.specICT
                      ? "text-green-600 font-semibold"
                      : "text-gray-500"
                  }`}
                >
                  {product.specICT ? "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö" : "‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö"}
                </span>
              </li>
              <li>
                <span className="font-semibold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</span>{" "}
                <span className="text-green-600 font-semibold">
                  {product.status || "N/A"}
                </span>
              </li>
            </ul>

            {/* ‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á) */}
            {token ? (
              <p className="text-green-600 font-bold text-4xl mt-10 pl-4">
                ‡∏£‡∏≤‡∏Ñ‡∏≤ :{" "}
                {product.price != null
                  ? ` ${product.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó`
                  : "‡∏øN/A"}
              </p>
            ) : (
              <button
                onClick={() => navigate("/loginPage")}
                className="w-full py-4 mt-10 bg-gradient-to-r from-red-400 to-red-600 text-white font-semibold rounded-lg shadow-md hover:scale-105 hover:shadow-lg transition"
              >
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏Ñ‡∏≤
              </button>
            )}

            {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° (‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏•‡∏≠‡∏î) */}
            <div className="w-full flex flex-col gap-4 mt-6">
              {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ (‡πÄ‡∏õ‡∏¥‡∏î LINE ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ) */}
              <button
                onClick={() => {
                  window.open("https://line.me/R/ti/p/@021nijcx", "_blank");
                }}
                className="w-full py-4 bg-gradient-to-r from-green-500 to-green-700 text-white font-semibold rounded-lg shadow-md 
    hover:scale-105 hover:shadow-xl transition duration-300 transform hover:-translate-y-1 flex justify-center items-center gap-2 text-xl"
              >
                <FileText size={28} /> ‡∏£‡∏±‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
              </button>

              {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö & ‡πÅ‡∏ä‡∏£‡πå */}
              <div className="w-full flex gap-4">
                <button
                  onClick={handleCompareClick} // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
                  className="w-full py-4 bg-gradient-to-r from-blue-500 to-blue-700 text-white font-semibold rounded-lg shadow-md hover:scale-105 hover:shadow-lg transition flex justify-center items-center gap-2 text-xl"
                >
                  <Repeat size={30} strokeWidth={1.5} />
                  <span>‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö</span>
                </button>

                <button
                  onClick={() => {
                    navigator.clipboard.writeText(window.location.href);
                    alert("‚úÖ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß!");
                  }}
                  className="w-full py-4 bg-gradient-to-r from-gray-500 to-gray-700 text-white font-semibold rounded-lg shadow-md hover:scale-105 hover:shadow-lg transition flex justify-center items-center gap-2"
                >
                  <Share  size={30} ></Share> ‡πÅ‡∏ä‡∏£‡πå
                </button>
              </div>
            </div>
          </div>
        </div>
        {/* ‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div className="w-full mt-10">
          <h2 className="text-2xl font-bold text-gray-800 mb-4">
            ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
          </h2>
          <div className="w-full border-t border-gray-300"></div>
          <table className="w-full mt-4 text-left text-gray-800">
            <tbody>
              {product.specifications?.map((spec, index) => (
                <tr
                  key={index}
                  className={index % 2 === 0 ? "bg-gray-100" : "bg-white"}
                >
                  <td className="px-5 py-3 font-semibold w-1/3">{spec.name}</td>
                  <td className="px-5 py-3">{spec.description || "-"}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>

        {/* ‚úÖ Lightbox */}
        {isLightboxOpen && (
          <Lightbox
            open={isLightboxOpen}
            close={() => setIsLightboxOpen(false)}
            slides={images.map((img) => ({ src: img.src }))}
            index={currentIndex}
            plugins={[Thumbnails]}
            styles={{
              container: {
                backgroundColor: "rgba(0, 0, 0, 0.4)",
                backdropFilter: "blur(15px)",
              },
              thumbnailsContainer: { backgroundColor: "#f1f1f1" },
            }}
            thumbnails={{
              position: "bottom",
              width: 100,
              height: 70,
              borderRadius: 8,
              gap: 8,
            }}
          />
        )}
      </div>
      <ChatButton />
    </div>
  );
};

export default ProductPage;
