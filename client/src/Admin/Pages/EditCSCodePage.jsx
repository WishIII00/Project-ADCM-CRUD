import { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { useNavigate, useParams } from "react-router-dom";
import axios from "axios";
import Swal from "sweetalert2";
import AdminLayout from "../Layouts/AdminLayout";

const API_BASE_URL = "http://localhost:3000/api";

const EditCSCodePage = () => {
  const { id } = useParams(); // ‚úÖ ‡∏î‡∏∂‡∏á ID ‡∏à‡∏≤‡∏Å URL
  const { register, handleSubmit, setValue, formState: { errors } } = useForm();
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();

  // üìå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSCode ‡∏ï‡∏≤‡∏° ID
  useEffect(() => {
    fetchCSCode();
  }, []);

  const fetchCSCode = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/cscodes/${id}`);
      setValue("code", response.data.CSCodeData.code);
      setValue("description", response.data.CSCodeData.description);
    } catch (error) {
      Swal.fire({ title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSCode", icon: "error" });
      navigate(-1);
    }
  };

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSCode
  const onSubmit = async (data) => {
    const token = sessionStorage.getItem("token");
    if (!token) {
      return Swal.fire({ title: "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö!", text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", icon: "error" });
    }

    setLoading(true);
    try {
      await axios.put(`${API_BASE_URL}/cscodes/${id}`, 
        { code: data.code.trim(), description: data.description.trim() },
        {
          headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json",
          },
        }
      );

      Swal.fire({ title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", text: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSCode ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", icon: "success" });
      navigate("/add-cscode"); // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
    } catch (error) {
      Swal.fire({ title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", text: error.response?.data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSCode ‡πÑ‡∏î‡πâ", icon: "error" });
    } finally {
      setLoading(false);
    }
  };

  return (
    <AdminLayout>
      <div className="max-w-lg mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg">
        <h2 className="text-2xl font-bold mb-4 text-center">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç CSCode</h2>
        <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
          <div>
            <label className="block text-gray-700 font-semibold mb-1">CSCode</label>
            <input type="text" className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400"
              {...register("code", { required: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å CSCode" })} />
            {errors.code && <p className="text-red-500 text-sm mt-1">{errors.code.message}</p>}
          </div>

          <div>
            <label className="block text-gray-700 font-semibold mb-1">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</label>
            <textarea className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400"
              {...register("description")} />
          </div>

          <button type="submit" className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-200" disabled={loading}>
            {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å..." : "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"}
          </button>
        </form>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
        <button onClick={() => navigate(-1)} className="mt-4 bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg">
          ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
        </button>
      </div>
    </AdminLayout>
  );
};

export default EditCSCodePage;
